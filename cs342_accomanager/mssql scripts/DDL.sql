----------------------------------------------------------------
-----------------------------DROP CONSTRAINTS-------------------
----------------------------------------------------------------
--
use master
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_BOOKING_1]') AND parent_object_id = OBJECT_ID(N'[dbo].[BOOKING]'))
ALTER TABLE [dbo].[BOOKING] DROP CONSTRAINT [FK_BOOKING_1]
GO

IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_BOOKING_2]') AND parent_object_id = OBJECT_ID(N'[dbo].[BOOKING]'))
ALTER TABLE [dbo].[BOOKING] DROP CONSTRAINT [FK_BOOKING_2]
GO
--Accommodation
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_ACCOMMODATION_1]') AND parent_object_id = OBJECT_ID(N'[dbo].[ACCOMMODATION]'))
ALTER TABLE [dbo].[ACCOMMODATION] DROP CONSTRAINT [FK_ACCOMMODATION_1]
GO

IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_ACCOMMODATION_2]') AND parent_object_id = OBJECT_ID(N'[dbo].[ACCOMMODATION]'))
ALTER TABLE [dbo].[ACCOMMODATION] DROP CONSTRAINT [FK_ACCOMMODATION_2]
GO

IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_ACCOMMODATION_3]') AND parent_object_id = OBJECT_ID(N'[dbo].[ACCOMMODATION]'))
ALTER TABLE [dbo].[ACCOMMODATION] DROP CONSTRAINT [FK_ACCOMMODATION_3]
GO

--Product
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_PRODUCT_1]') AND parent_object_id = OBJECT_ID(N'[dbo].[PRODUCT]'))
ALTER TABLE [dbo].[PRODUCT] DROP CONSTRAINT [FK_PRODUCT_1]
GO


IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_PRODUCT_2]') AND parent_object_id = OBJECT_ID(N'[dbo].[PRODUCT]'))
ALTER TABLE [dbo].[PRODUCT] DROP CONSTRAINT [FK_PRODUCT_2]
GO


IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_PRODUCT_3]') AND parent_object_id = OBJECT_ID(N'[dbo].[PRODUCT]'))
ALTER TABLE [dbo].[PRODUCT] DROP CONSTRAINT [FK_PRODUCT_3]
GO
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_PRODUCT_4]') AND parent_object_id = OBJECT_ID(N'[dbo].[PRODUCT]'))
ALTER TABLE [dbo].[PRODUCT] DROP CONSTRAINT [FK_PRODUCT_4]
GO


IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_PRODUCT_5]') AND parent_object_id = OBJECT_ID(N'[dbo].[PRODUCT]'))
ALTER TABLE [dbo].[PRODUCT] DROP CONSTRAINT [FK_PRODUCT_5]
GO

IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_PRODUCT_6]') AND parent_object_id = OBJECT_ID(N'[dbo].[PRODUCT]'))
ALTER TABLE [dbo].[PRODUCT] DROP CONSTRAINT [FK_PRODUCT_6]
GO
--Product Reserve

IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_PRODUCT_RESERVE_1]') AND parent_object_id = OBJECT_ID(N'[dbo].[PRODUCT_RESERVE]'))
ALTER TABLE [dbo].[PRODUCT_RESERVE] DROP CONSTRAINT [FK_PRODUCT_RESERVE_1]
GO
--MANAGES--
IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_MANAGES_1]') AND parent_object_id = OBJECT_ID(N'[dbo].[MANAGES]'))
ALTER TABLE [dbo].[MANAGES] DROP CONSTRAINT [FK_MANAGES_1]
IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_MANAGES_2]') AND parent_object_id = OBJECT_ID(N'[dbo].[MANAGES]'))
ALTER TABLE [dbo].[MANAGES] DROP CONSTRAINT [FK_MANAGES_2]
GO

--ACC PROVIDES FACILITY--
IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_ACC_PROVIDES_FACILITY_1]') AND parent_object_id = OBJECT_ID(N'[dbo].[ACC_PROVIDES_FACILITY]'))
ALTER TABLE [dbo].[ACC_PROVIDES_FACILITY] DROP CONSTRAINT [FK_ACC_PROVIDES_FACILITY_1]
IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_ACC_PROVIDES_FACILITY_2]') AND parent_object_id = OBJECT_ID(N'[dbo].[ACC_PROVIDES_FACILITY]'))
ALTER TABLE [dbo].[ACC_PROVIDES_FACILITY] DROP CONSTRAINT [FK_ACC_PROVIDES_FACILITY_2]
GO

--ACC HAS POLICY--
IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_ACC_HAS_POLICY_1]') AND parent_object_id = OBJECT_ID(N'[dbo].[ACC_HAS_POLICY]'))
ALTER TABLE [dbo].[ACC_HAS_POLICY] DROP CONSTRAINT [FK_ACC_HAS_POLICY_1]
IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_ACC_HAS_POLICY_2]') AND parent_object_id = OBJECT_ID(N'[dbo].[ACC_HAS_POLICY]'))
ALTER TABLE [dbo].[ACC_HAS_POLICY] DROP CONSTRAINT [FK_ACC_HAS_POLICY_2]
GO

--ROOM HAS AMENITY--
IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_ROOM_HAS_AMENITY_1]') AND parent_object_id = OBJECT_ID(N'[dbo].[ROOM_HAS_AMENITY]'))
ALTER TABLE [dbo].[ROOM_HAS_AMENITY] DROP CONSTRAINT [FK_ROOM_HAS_AMENITY_1]
IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_ROOM_HAS_AMENITY_2]') AND parent_object_id = OBJECT_ID(N'[dbo].[ROOM_HAS_AMENITY]'))
ALTER TABLE [dbo].[ROOM_HAS_AMENITY] DROP CONSTRAINT [FK_ROOM_HAS_AMENITY_2]
GO

--PRODUCT HAS TERM--
IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_PRODUCT_HAS_TERM_1]') AND parent_object_id = OBJECT_ID(N'[dbo].[PRODUCT_HAS_TERM]'))
ALTER TABLE [dbo].[PRODUCT_HAS_TERM] DROP CONSTRAINT [FK_PRODUCT_HAS_TERM_1]
IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_PRODUCT_HAS_TERM_2]') AND parent_object_id = OBJECT_ID(N'[dbo].[PRODUCT_HAS_TERM]'))
ALTER TABLE [dbo].[PRODUCT_HAS_TERM] DROP CONSTRAINT [FK_PRODUCT_HAS_TERM_2]
GO

--REVIEW--
IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_REVIEW]') AND parent_object_id = OBJECT_ID(N'[dbo].[REVIEW]'))
ALTER TABLE [dbo].[REVIEW] DROP CONSTRAINT [FK_REVIEW]
GO

--BOOKING_HAS_PRODUCT--
IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_BOOKING_HAS_PRODUCT_1]') AND parent_object_id = OBJECT_ID(N'[dbo].[BOOKING_HAS_PRODUCT]'))
ALTER TABLE [dbo].[BOOKING_HAS_PRODUCT] DROP CONSTRAINT [FK_BOOKING_HAS_PRODUCT_1]
IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_BOOKING_HAS_PRODUCT_2]') AND parent_object_id = OBJECT_ID(N'[dbo].[BOOKING_HAS_PRODUCT]'))
ALTER TABLE [dbo].[BOOKING_HAS_PRODUCT] DROP CONSTRAINT [FK_BOOKING_HAS_PRODUCT_2]
GO

--CITY-
IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_CITY_1]') AND parent_object_id = OBJECT_ID(N'[dbo].[CITY]'))
ALTER TABLE [dbo].[CITY] DROP CONSTRAINT [FK_CITY_1]
GO

--ROOM TYPE--
IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_ROOM_TYPE_1]') AND parent_object_id = OBJECT_ID(N'[dbo].[ROOM_TYPE]'))
ALTER TABLE [dbo].[ROOM_TYPE] DROP CONSTRAINT [FK_ROOM_TYPE_1]
GO
--AUDIT MANAGER--
IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_AUDIT_MANAGER]') AND parent_object_id = OBJECT_ID(N'[dbo].[AUDIT_MANAGER]'))
ALTER TABLE [dbo].[AUDIT_MANAGER] DROP CONSTRAINT [FK_AUDIT_MANAGER]
GO

--many to many relationships--


IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_ROOMTYPE_HAS_BED_TYPE_1]') AND parent_object_id = OBJECT_ID(N'[dbo].[ROOMTYPE_HAS_BED_TYPE]'))
ALTER TABLE [dbo].[ROOMTYPE_HAS_BED_TYPE] DROP CONSTRAINT [FK_ROOMTYPE_HAS_BED_TYPE_1]
GO
IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_ROOMTYPE_HAS_BED_TYPE_2]') AND parent_object_id = OBJECT_ID(N'[dbo].[ROOMTYPE_HAS_BED_TYPE]'))
ALTER TABLE [dbo].[ROOMTYPE_HAS_BED_TYPE] DROP CONSTRAINT [FK_ROOMTYPE_HAS_BED_TYPE_2]
GO
IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_BREAKFAST_HAS_TYPE_1]') AND parent_object_id = OBJECT_ID(N'[dbo].[BREAKFAST_HAS_TYPE]'))
ALTER TABLE [dbo].[BREAKFAST_HAS_TYPE] DROP CONSTRAINT [FK_BREAKFAST_HAS_TYPE_1]
GO
IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_BREAKFAST_HAS_TYPE_2]') AND parent_object_id = OBJECT_ID(N'[dbo].[BREAKFAST_HAS_TYPE]'))
ALTER TABLE [dbo].[BREAKFAST_HAS_TYPE] DROP CONSTRAINT [FK_BREAKFAST_HAS_TYPE_2]
GO
IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_ACC_HAS_BREAKFAST_ITEM_1]') AND parent_object_id = OBJECT_ID(N'[dbo].[ACC_HAS_BREAKFAST_ITEM]'))
ALTER TABLE [dbo].[ACC_HAS_BREAKFAST_ITEM] DROP CONSTRAINT [FK_ACC_HAS_BREAKFAST_ITEM_1]
GO
IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_ACC_HAS_BREAKFAST_ITEM_2]') AND parent_object_id = OBJECT_ID(N'[dbo].[ACC_HAS_BREAKFAST_ITEM]'))
ALTER TABLE [dbo].[ACC_HAS_BREAKFAST_ITEM] DROP CONSTRAINT [FK_ACC_HAS_BREAKFAST_ITEM_2]
GO
IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_ACC_HAS_MEAL_PLAN_1]') AND parent_object_id = OBJECT_ID(N'[dbo].[ACC_HAS_MEAL_PLAN]'))
ALTER TABLE [dbo].[ACC_HAS_MEAL_PLAN] DROP CONSTRAINT [FK_ACC_HAS_MEAL_PLAN_1]
GO
IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_ACC_HAS_MEAL_PLAN_2]') AND parent_object_id = OBJECT_ID(N'[dbo].[ACC_HAS_MEAL_PLAN]'))
ALTER TABLE [dbo].[ACC_HAS_MEAL_PLAN] DROP CONSTRAINT [FK_ACC_HAS_MEAL_PLAN_2]
GO
IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_ACC_HAS_CUISINE_1]') AND parent_object_id = OBJECT_ID(N'[dbo].[ACC_HAS_CUISINE]'))
ALTER TABLE [dbo].[ACC_HAS_CUISINE] DROP CONSTRAINT [FK_ACC_HAS_CUISINE_1]
GO
IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_ACC_HAS_CUISINE_2]') AND parent_object_id = OBJECT_ID(N'[dbo].[ACC_HAS_CUISINE]'))
ALTER TABLE [dbo].[ACC_HAS_CUISINE] DROP CONSTRAINT [FK_ACC_HAS_CUISINE_2]
GO
IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_ACC_SUPPORTS_LANGUAGE_1]') AND parent_object_id = OBJECT_ID(N'[dbo].[ACC_SUPPORTS_LANGUAGE]'))
ALTER TABLE [dbo].[ACC_SUPPORTS_LANGUAGE] DROP CONSTRAINT [FK_ACC_SUPPORTS_LANGUAGE_1]
GO
IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_ACC_SUPPORTS_LANGUAGE_2]') AND parent_object_id = OBJECT_ID(N'[dbo].[ACC_SUPPORTS_LANGUAGE]'))
ALTER TABLE [dbo].[ACC_SUPPORTS_LANGUAGE] DROP CONSTRAINT [FK_ACC_SUPPORTS_LANGUAGE_2]
GO
IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_ACC_HAS_PAYMENT_TYPE_1]') AND parent_object_id = OBJECT_ID(N'[dbo].[ACC_HAS_PAYMENT_TYPE]'))
ALTER TABLE [dbo].[ACC_HAS_PAYMENT_TYPE] DROP CONSTRAINT [FK_ACC_HAS_PAYMENT_TYPE_1]
GO
IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_ACC_HAS_PAYMENT_TYPE_2]') AND parent_object_id = OBJECT_ID(N'[dbo].[ACC_HAS_PAYMENT_TYPE]'))
ALTER TABLE [dbo].[ACC_HAS_PAYMENT_TYPE] DROP CONSTRAINT [FK_ACC_HAS_PAYMENT_TYPE_2]
GO
IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_ACC_HAS_TRANSPORTATION_1]') AND parent_object_id = OBJECT_ID(N'[dbo].[ACC_HAS_TRANSPORTATION]'))
ALTER TABLE [dbo].[ACC_HAS_TRANSPORTATION] DROP CONSTRAINT [FK_ACC_HAS_TRANSPORTATION_1]
GO
IF EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_ACC_HAS_TRANSPORTATION_2]') AND parent_object_id = OBJECT_ID(N'[dbo].[ACC_HAS_TRANSPORTATION]'))
ALTER TABLE [dbo].[ACC_HAS_TRANSPORTATION] DROP CONSTRAINT [FK_ACC_HAS_TRANSPORTATION_2]
GO



----------------------------------------------------------------
-----------------------------DROP TABLES------------------------
----------------------------------------------------------------
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[USER]') AND type in (N'U'))
DROP TABLE [dbo].[USER]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[BOOKING]') AND type in (N'U'))
DROP TABLE [dbo].[BOOKING]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ACCOMMODATION]') AND type in (N'U'))
DROP TABLE [dbo].[ACCOMMODATION]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ACCOMMODATION_TYPE]') AND type in (N'U'))
DROP TABLE [dbo].[ACCOMMODATION_TYPE]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ACCOMMODATION_POLICY]') AND type in (N'U'))
DROP TABLE [dbo].[ACCOMMODATION_POLICY]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[FACILITIES]') AND type in (N'U'))
DROP TABLE [dbo].[FACILITIES]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[CONTACT_PERSON]') AND type in (N'U'))
DROP TABLE [dbo].[CONTACT_PERSON]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[PRODUCT]') AND type in (N'U'))
DROP TABLE [dbo].[PRODUCT]
GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[PRODUCT_RESERVE]') AND type in (N'U'))
DROP TABLE [dbo].[PRODUCT_RESERVE]
GO

IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TERMS]') AND type in (N'U'))
DROP TABLE [dbo].[TERMS]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[PRICE_CATEGORY]') AND type in (N'U'))
DROP TABLE [dbo].[PRICE_CATEGORY]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ROOM_TYPE]') AND type in (N'U'))
DROP TABLE [dbo].[ROOM_TYPE]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AMENITY]') AND type in (N'U'))
DROP TABLE [dbo].[AMENITY]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[REVIEW]') AND type in (N'U'))
DROP TABLE [dbo].[REVIEW]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[PRODUCT_HAS_TERM]') AND type in (N'U'))
DROP TABLE [dbo].[PRODUCT_HAS_TERM]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ROOM_HAS_AMENITY]') AND type in (N'U'))
DROP TABLE [dbo].[ROOM_HAS_AMENITY]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ACC_HAS_POLICY]') AND type in (N'U'))
DROP TABLE [dbo].[ACC_HAS_POLICY]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ACC_PROVIDES_FACILITY]') AND type in (N'U'))
DROP TABLE [dbo].[ACC_PROVIDES_FACILITY]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MANAGES]') AND type in (N'U'))
DROP TABLE [dbo].[MANAGES]
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[PROD_TERMS_CONCAT]') AND type in (N'U'))
DROP TABLE [dbo].[PROD_TERMS_CONCAT]
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[BOOKING_HAS_PRODUCT]') AND type in (N'U'))
DROP TABLE [dbo].[BOOKING_HAS_PRODUCT]
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[COUNTRY]') AND type in (N'U'))
DROP TABLE [dbo].[COUNTRY]
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[CITY]') AND type in (N'U'))
DROP TABLE [dbo].[CITY]
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[CANCELLATION_POLICY]') AND type in (N'U'))
DROP TABLE [dbo].[CANCELLATION_POLICY]
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[PREPAYMENT_POLICY]') AND type in (N'U'))
DROP TABLE [dbo].[PREPAYMENT_POLICY]
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[AUDIT_MANAGER]') AND type in (N'U'))
DROP TABLE [dbo].[AUDIT_MANAGER]
GO

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[BREAKFAST_ITEM]') AND type in (N'U'))
DROP TABLE [dbo].[BREAKFAST_ITEM]
GO

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[BREAKFAST_TYPE]') AND type in (N'U'))
DROP TABLE [dbo].[BREAKFAST_TYPE]
GO

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[LANGUAGE]') AND type in (N'U'))
DROP TABLE [dbo].[LANGUAGE]
GO

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[PAYMENT_TYPE]') AND type in (N'U'))
DROP TABLE [dbo].[PAYMENT_TYPE]
GO

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[CUISINE_TYPE]') AND type in (N'U'))
DROP TABLE [dbo].[CUISINE_TYPE]
GO

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[MEAL_PLAN_TYPE]') AND type in (N'U'))
DROP TABLE [dbo].[MEAL_PLAN_TYPE]
GO

IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[BED_TYPE]') AND type in (N'U'))
DROP TABLE [dbo].[BED_TYPE]
GO
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[TRANSPORTATION]') AND type in (N'U'))
DROP TABLE [dbo].[TRANSPORTATION]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ACC_HAS_TRANSPORTATION]') AND type in (N'U'))
DROP TABLE [dbo].[ACC_HAS_TRANSPORTATION]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ACC_HAS_PAYMENT_TYPE]') AND type in (N'U'))
DROP TABLE [dbo].[ACC_HAS_PAYMENT_TYPE]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ACC_SUPPORTS_LANGUAGE]') AND type in (N'U'))
DROP TABLE [dbo].[ACC_SUPPORTS_LANGUAGE]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ACC_HAS_CUISINE]') AND type in (N'U'))
DROP TABLE [dbo].[ACC_HAS_CUISINE]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ACC_HAS_MEAL_PLAN]') AND type in (N'U'))
DROP TABLE [dbo].[ACC_HAS_MEAL_PLAN]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ACC_HAS_BREAKFAST_ITEM]') AND type in (N'U'))
DROP TABLE [dbo].[ACC_HAS_BREAKFAST_ITEM]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[BREAKFAST_HAS_TYPE]') AND type in (N'U'))
DROP TABLE [dbo].[BREAKFAST_HAS_TYPE]
GO
IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ROOMTYPE_HAS_BED_TYPE]') AND type in (N'U'))
DROP TABLE [dbo].[ROOMTYPE_HAS_BED_TYPE]
GO



----------------------------------------------------------------
-----------------------------CREATE TABLES----------------------
----------------------------------------------------------------

--USER--
CREATE TABLE [dbo].[USER](
    [USER_ID] [int] NOT NULL IDENTITY(1,1),
	[FNAME] [nvarchar](20) NOT NULL,
	[MINIT] [nvarchar](1),
	[LNAME] [nvarchar](30) NOT NULL,
    [BDATE] [date] NOT NULL,
    [SEX] [char] CHECK (SEX in ('F','f','M','m')) NOT NULL,
    [UROLE] [char] CHECK (UROLE in ('A','M','U')) NOT NULL, 
	[USERNAME] [varchar](30) NOT NULL,
    [EMAIL] [varchar](40) NOT NULL,
    [PASSWORD] [varchar](255) NOT NULL,
    [LAST_LOGIN] [datetime] NOT NULL,
    [VERIFIED] [bit] NOT NULL
)
ALTER TABLE [dbo].[USER]
WITH CHECK ADD CONSTRAINT PK_USER_ID PRIMARY KEY (USER_ID);
ALTER TABLE [dbo].[USER]
WITH CHECK ADD CONSTRAINT USER_UNIQUE UNIQUE (USERNAME,EMAIL);
ALTER TABLE [dbo].[USER]
WITH CHECK ADD CONSTRAINT EMAIL_UNIQUE UNIQUE (EMAIL);



--BOOKING--
CREATE TABLE [dbo].[BOOKING](
    [BOOKING_ID] [int] NOT NULL IDENTITY(1,1),
    [START_DATE] [date]  NOT NULL,
    [END_DATE] [date] NOT NULL,
    [FINAL_PRICE] [DECIMAL](7,2),
    [USER_ID] [int] NOT NULL,
	[CANCELLED] [bit] NOT NULL DEFAULT 0,
	[AMOUNT] [int] NOT NULL DEFAULT 1 CHECK (AMOUNT>0 AND AMOUNT<100),
	[RATING] [int] CHECK (RATING>=0 AND RATING<=5),
	[COMMENT] [NVARCHAR](1000)

)
ALTER TABLE [dbo].[BOOKING]
WITH CHECK ADD CONSTRAINT PK_BOOKING PRIMARY KEY (BOOKING_ID);


--ACCOMMODATION--
CREATE TABLE [dbo].[ACCOMMODATION](
    [ACC_ID] [int] NOT NULL IDENTITY(1,1),
    [NAME] [nvarchar](50) NOT NULL,
    [LAT] [DECIMAL](9,6) NOT NULL,
    [LON] [DECIMAL](9,6) NOT NULL,
	[ADDRESS] [nvarchar](100) NOT NULL,
	[CITY_ID] INT,
    [CONTACT_ID] [int] NOT NULL,
    [TYPE_CODE] [int] NOT NULL
)
ALTER TABLE [dbo].[ACCOMMODATION]
WITH CHECK ADD CONSTRAINT PK_ACCOMMODATION PRIMARY KEY (ACC_ID);

--COUNTRY--
CREATE TABLE [dbo].[COUNTRY](
	[COUNTRY_NAME][nvarchar](100) NOT NULL
)
ALTER TABLE [dbo].[COUNTRY]
WITH CHECK ADD CONSTRAINT PK_COUNTRY PRIMARY KEY ([COUNTRY_NAME]);

--CITY--
CREATE TABLE [dbo].[CITY](
	[CITY_ID] [int] NOT NULL IDENTITY(1,1),
	[CITY_NAME] [nvarchar](100) NOT NULL,
	[COUNTRY_NAME] [nvarchar](100)
)
ALTER TABLE [dbo].[CITY]
WITH CHECK ADD CONSTRAINT PK_CITY PRIMARY KEY (CITY_ID);


--ACCOMMODATION TYPE--
CREATE TABLE [dbo].[ACCOMMODATION_TYPE](
    [CODE] [int] NOT NULL IDENTITY(1,1),
    [DESCRIPTION][nvarchar](500) NOT NULL
)
ALTER TABLE [dbo].[ACCOMMODATION_TYPE]
WITH CHECK ADD CONSTRAINT PK_ACCOMMODATION_TYPE PRIMARY KEY (CODE);
ALTER TABLE [dbo].[ACCOMMODATION_TYPE]
WITH CHECK ADD CONSTRAINT ACCOMMODATION_TYPE_UNIQUE UNIQUE ([DESCRIPTION]);



--ACCOMMODATION POLICY--
CREATE TABLE [dbo].[ACCOMMODATION_POLICY](
    [CODE] [int] NOT NULL IDENTITY(1,1),
    [DESCRIPTION][nvarchar](500) NOT NULL
)
ALTER TABLE [dbo].[ACCOMMODATION_POLICY]
WITH CHECK ADD CONSTRAINT PK_ACCOMMODATION_POLICY PRIMARY KEY (CODE);
ALTER TABLE [dbo].[ACCOMMODATION_TYPE]
WITH CHECK ADD CONSTRAINT ACCOMMODATION_POLICY_UNIQUE UNIQUE ([DESCRIPTION]);

--FACILITIES--
CREATE TABLE [dbo].[FACILITIES](
    [CODE] [int] NOT NULL IDENTITY(1,1),
    [DESCRIPTION][nvarchar](500) NOT NULL,
	[NOTES][nvarchar](500)
)
ALTER TABLE [dbo].[FACILITIES]
WITH CHECK ADD CONSTRAINT PK_FACILITIES PRIMARY KEY (CODE);
ALTER TABLE [dbo].[FACILITIES]
WITH CHECK ADD CONSTRAINT FACILITIES_UNIQUE UNIQUE ([DESCRIPTION]);

--CONTACT PERSON--
CREATE TABLE [dbo].[CONTACT_PERSON](
    [CONTACT_ID] [int] NOT NULL IDENTITY(1,1),
    [FNAME] [nvarchar](30) NOT NULL,
    [LNAME] [nvarchar](40) NOT NULL,
    [PHONE] [varchar](20) NOT NULL,
)
ALTER TABLE [dbo].[CONTACT_PERSON]
WITH CHECK ADD CONSTRAINT PK_CONTACT_PERSON PRIMARY KEY (CONTACT_ID);
--ALTER TABLE [dbo].[CONTACT_PERSON]																	remember to add this back!!
--WITH CHECK ADD CONSTRAINT CP_UNIQUE UNIQUE (PHONE);

--PRODUCT--
CREATE TABLE [dbo].[PRODUCT](
	[PID] [int] NOT NULL IDENTITY(1,1),
    [ROOM_CODE] [int] NOT NULL,
    --[ACCOM_ID] [int] NOT NULL,
    [CATEGORY_CODE] [int] NOT NULL,
	--[STOCK][int] NOT NULL,
	[PPD] [DECIMAL] (5,2),
	[CANCEL_POLICY][INT], --fk
	[PREPAYMENT_POLICY][INT], --Fk
	[MIN_STAY][INT],
	[MAX_STAY][INT],
	[OVERRIDE_PC][INT],--fk
	[OVERRIDE_START][DATE],
	[OVERRIDE_END][DATE]

)
ALTER TABLE [dbo].[PRODUCT]
WITH CHECK ADD CONSTRAINT PK_PRODUCT PRIMARY KEY (PID);

--PRODUCT RESERVE--
CREATE TABLE [dbo].[PRODUCT_RESERVE](
	[ID] [int] NOT NULL IDENTITY(1,1),
	[DATE] [date] NOT NULL,
	[AVAILABILITY] [int] NOT NULL,
    [PID] [int] NOT NULL,
	[STOCK][int] NOT NULL,
)
ALTER TABLE [dbo].[PRODUCT_RESERVE]
WITH CHECK ADD CONSTRAINT PK_PRODCUT_RESERVE PRIMARY KEY (ID);

IF EXISTS (SELECT * FROM sys.indexes WHERE name = 'PR_INDEX' AND object_id = OBJECT_ID(N'[dbo].[PRODUCT_RESERVE]'))
BEGIN
    DROP INDEX PR_INDEX ON users;
END
GO
CREATE INDEX PR_INDEX ON PRODUCT_RESERVE(PID)
GO

--PRICE CATEGORY--
CREATE TABLE [dbo].[PRICE_CATEGORY](
	[CODE] [int] NOT NULL IDENTITY(1,1),
	[DESCRIPTION] [varchar](500) NOT NULL
)
ALTER TABLE [dbo].[PRICE_CATEGORY]
WITH CHECK ADD CONSTRAINT PK_PRICE_CATEGORY PRIMARY KEY (CODE);
ALTER TABLE [dbo].[PRICE_CATEGORY]
WITH CHECK ADD CONSTRAINT PRICE_CATEGORY_UNIQUE UNIQUE ([DESCRIPTION]);

--TERMS--
CREATE TABLE [dbo].[TERMS](
    [CODE] [int] NOT NULL IDENTITY(1,1),
    [DESCRIPTION] [nvarchar](500) NOT NULL,
)
ALTER TABLE [dbo].[TERMS]
WITH CHECK ADD CONSTRAINT PK_TERMS PRIMARY KEY (CODE);
ALTER TABLE [dbo].[TERMS]
WITH CHECK ADD CONSTRAINT TERMS_UNIQUE UNIQUE ([DESCRIPTION]);


--ROOM TYPE--
CREATE TABLE [dbo].[ROOM_TYPE](
    [CODE] [int] NOT NULL IDENTITY(1,1),
    [TITLE][nvarchar](500) NOT NULL,
	[NOTES][nvarchar](500),
	[ACC_ID][int] NOT NULL,
	[MAX_PERSONS][int] NOT NULL,
	[SUBROOMS][int] NOT NULL,
)
ALTER TABLE [dbo].[ROOM_TYPE]
WITH CHECK ADD CONSTRAINT PK_ROOM_TYPE PRIMARY KEY (CODE);


--AMENITY--
CREATE TABLE [dbo].[AMENITY](
    [CODE] [int] NOT NULL IDENTITY(1,1),
    [DESCRIPTION][nvarchar](100) NOT NULL,
  
)
ALTER TABLE [dbo].[AMENITY]
WITH CHECK ADD CONSTRAINT PK_AMENITY PRIMARY KEY (CODE);
ALTER TABLE [dbo].[AMENITY]
WITH CHECK ADD CONSTRAINT AMENITY_UNIQUE UNIQUE ([DESCRIPTION]);


--REVIEW--
/*
CREATE TABLE [dbo].[REVIEW](
	[ID] [int] NOT NULL IDENTITY(1,1),
	[RATING] [int] NOT NULL,
	[COMMENT] [nvarchar](500),
	[BOOKING_ID] [int] NOT NULL
)
ALTER TABLE [dbo].[REVIEW]
WITH CHECK ADD CONSTRAINT PK_REVIEW PRIMARY KEY (ID);
ALTER TABLE [dbo].[REVIEW]
WITH CHECK ADD CONSTRAINT CHECK_RATING CHECK (RATING>=0 AND RATING<=5);
*/

--PRODUCT HAS TERM--
CREATE TABLE [dbo].[PRODUCT_HAS_TERM](
	[ID] [int] NOT NULL IDENTITY(1,1),
	[PID] [int] NOT NULL,
	[TERM_ID] [int] NOT NULL
)
ALTER TABLE [dbo].[PRODUCT_HAS_TERM]
WITH CHECK ADD CONSTRAINT PK_PRODUCT_HAS_TERM PRIMARY KEY (ID);
ALTER TABLE [dbo].[PRODUCT_HAS_TERM]
WITH CHECK ADD CONSTRAINT UNIQUE_PRODUCT_HAS_TERM UNIQUE (PID,TERM_ID);

--ROOM HAS AMENITY--
CREATE TABLE [dbo].[ROOM_HAS_AMENITY](
	[ID] [int] NOT NULL IDENTITY(1,1),
	[ROOM_CODE] [int] NOT NULL,
	[CODE] [int] NOT NULL
)
ALTER TABLE [dbo].[ROOM_HAS_AMENITY]
WITH CHECK ADD CONSTRAINT PK_ROOM_HAS_AMENITY PRIMARY KEY (ID);
ALTER TABLE [dbo].[ROOM_HAS_AMENITY]
WITH CHECK ADD CONSTRAINT UNIQUE_ROOM_HAS_AMENITY UNIQUE (ROOM_CODE,CODE);

--ACCOMMODATION HAS POLICY--
CREATE TABLE [dbo].[ACC_HAS_POLICY](
	[ID] [int] NOT NULL IDENTITY(1,1),
	[ACCOM_ID] [int] NOT NULL,
	[CODE] [int] NOT NULL
)
ALTER TABLE [dbo].[ACC_HAS_POLICY]
WITH CHECK ADD CONSTRAINT PK_ACC_HAS_POLICY PRIMARY KEY (ID);
ALTER TABLE [dbo].[ACC_HAS_POLICY]
WITH CHECK ADD CONSTRAINT UNIQUE_ACC_HAS_POLICY UNIQUE (ACCOM_ID,CODE);

--ACC PROVIDES FACILITY--
CREATE TABLE [dbo].[ACC_PROVIDES_FACILITY](
	[ID] [int] NOT NULL IDENTITY(1,1),
	[ACCOM_ID] [int] NOT NULL,
	[CODE] [int] NOT NULL
)
ALTER TABLE [dbo].[ACC_PROVIDES_FACILITY]
WITH CHECK ADD CONSTRAINT PK_ACC_PROVIDES_FACILITY PRIMARY KEY (ID);
ALTER TABLE [dbo].[ACC_PROVIDES_FACILITY]
WITH CHECK ADD CONSTRAINT UNIQUE_ACC_PROVIDES_FACILITY UNIQUE (ACCOM_ID,CODE);

--MANAGES--
CREATE TABLE [dbo].[MANAGES](
	[ID] [int] NOT NULL IDENTITY(1,1),
	[USER_ID][int] NOT NULL,
	[ACCOM_ID][int] NOT NULL
)
ALTER TABLE [dbo].[MANAGES]
WITH CHECK ADD CONSTRAINT PK_MANAGES PRIMARY KEY (ID);
ALTER TABLE [dbo].[MANAGES]
WITH CHECK ADD CONSTRAINT MANAGES_UNIQUE UNIQUE([USER_ID],ACCOM_ID);


--BOOKING HAS PRODUCT
CREATE TABLE [dbo].[BOOKING_HAS_PRODUCT](
	[BOOKING_ID] [int] NOT NULL,
	[PID] [int] NOT NULL
)
ALTER TABLE [dbo].[BOOKING_HAS_PRODUCT]
WITH CHECK ADD CONSTRAINT BOOKING_HAS_PRODUCT_UNIQUE UNIQUE (BOOKING_ID,PID);

/*
--PROD_TERMS_CONCAT--
CREATE TABLE PROD_TERMS_CONCAT(
	PID INT,
	TERMS VARCHAR(200)
)*/
/*
ALTER TABLE [dbo].[PROD_TERMS_CONCAT]
WITH CHECK ADD CONSTRAINT PROD_TERMS_CONCAT_UNIQUE UNIQUE(PID,TERMS);
*/

--CANCELLATION POLICY--
CREATE TABLE CANCELLATION_POLICY(
	[ID] [INT] IDENTITY(1,1),
	[MAX_DAYS_PRIOR] [INT] NOT NULL,
	[PENALTY] [DECIMAL](5,2) 
)
ALTER TABLE dbo.[CANCELLATION_POLICY]
WITH CHECK ADD CONSTRAINT PK_CANCELLATION_POLICY PRIMARY KEY (ID);
ALTER TABLE [dbo].[CANCELLATION_POLICY]
WITH CHECK ADD CONSTRAINT CHECK_PENALTY CHECK (PENALTY>=0 AND PENALTY<=100)

--PREPAYMENT POLICY--
CREATE TABLE PREPAYMENT_POLICY(
	[ID][INT] IDENTITY(1,1),
	[DAYS_PRIOR] [INT] NOT NULL,
	[AMOUNT] [DECIMAL](5,2) NOT NULL
)
ALTER TABLE dbo.[PREPAYMENT_POLICY]
WITH CHECK ADD CONSTRAINT PK_PREPAYMENT_POLICY PRIMARY KEY (ID);
ALTER TABLE [dbo].[PREPAYMENT_POLICY]
WITH CHECK ADD CONSTRAINT CHECK_AMOUNT CHECK (AMOUNT>=0 AND AMOUNT<=100.00)

--AUDIT MANAGER--
CREATE TABLE [dbo].[AUDIT_MANAGER](
    [AUDIT_ID] [int] NOT NULL IDENTITY(1,1),
    [MANAGER_ID] [int] NOT NULL,
    [DESCRIPTION][nvarchar](500) NOT NULL,
    [DATE] [datetime] NOT NULL

)
ALTER TABLE [dbo].[AUDIT_MANAGER]
WITH CHECK ADD CONSTRAINT PK_AUDIT_MANAGER PRIMARY KEY (AUDIT_ID);


------BREAKFAST_ITEM----------
CREATE TABLE [dbo].[BREAKFAST_ITEM](
    [BREAKFAST_ID] [int] NOT NULL IDENTITY(1,1),
	[DESCRIPTION] [nvarchar](100) NOT NULL
)
ALTER TABLE [dbo].[BREAKFAST_ITEM]
WITH CHECK ADD CONSTRAINT PK_BREAKFAST_ITEM PRIMARY KEY (BREAKFAST_ID);

------BREAKFAST_TYPE----------
CREATE TABLE [dbo].[BREAKFAST_TYPE](
    [BREAKFAST_TYPE_ID] [int] NOT NULL IDENTITY(1,1),
	[DESCRIPTION] [nvarchar](100) NOT NULL
)
ALTER TABLE [dbo].[BREAKFAST_TYPE]
WITH CHECK ADD CONSTRAINT PK_BREAKFAST_TYPE PRIMARY KEY (BREAKFAST_TYPE_ID);

------LANGUAGES---------
CREATE TABLE [dbo].[LANGUAGE](
    [LANGUAGE_ID] [int] NOT NULL IDENTITY(1,1),
	[LANGUAGE_CODE] [nvarchar](20) NOT NULL,
	[DESCRIPTION] [nvarchar](100) NOT NULL
)
ALTER TABLE [dbo].[LANGUAGE]
WITH CHECK ADD CONSTRAINT PK_LANGUAGES PRIMARY KEY (LANGUAGE_ID);

---------PAYMENT TYPES---------
CREATE TABLE [dbo].[PAYMENT_TYPE](
    [PAYMENT_TYPE_ID] [int] NOT NULL IDENTITY(1,1),
	[DESCRIPTION] [nvarchar](100) NOT NULL
)
ALTER TABLE [dbo].[PAYMENT_TYPE]
WITH CHECK ADD CONSTRAINT PK_PAYMENT_TYPE PRIMARY KEY (PAYMENT_TYPE_ID);

---------CUISINE TYPES---------
CREATE TABLE [dbo].[CUISINE_TYPE](
    [CUISINE_TYPE_ID] [int] NOT NULL IDENTITY(1,1),
	[DESCRIPTION] [nvarchar](100) NOT NULL
)
ALTER TABLE [dbo].[CUISINE_TYPE]
WITH CHECK ADD CONSTRAINT PK_CUISINE_TYPE PRIMARY KEY (CUISINE_TYPE_ID);

-------MEAL PLAN TYPE-----------
CREATE TABLE [dbo].[MEAL_PLAN_TYPE](
    [MEAL_PLAN_TYPE_ID] [int] NOT NULL IDENTITY(1,1),
	[DESCRIPTION] [nvarchar](100) NOT NULL
)
ALTER TABLE [dbo].[MEAL_PLAN_TYPE]
WITH CHECK ADD CONSTRAINT PK_MEAL_PLAN_TYPE PRIMARY KEY (MEAL_PLAN_TYPE_ID);

------BED TYPES---------
CREATE TABLE [dbo].[BED_TYPE](
    [BED_TYPE_ID] [int] NOT NULL IDENTITY(1,1),
	[DESCRIPTION] [nvarchar](100) NOT NULL
)
ALTER TABLE [dbo].[BED_TYPE]
WITH CHECK ADD CONSTRAINT PK_BED_TYPE PRIMARY KEY (BED_TYPE_ID);

------TRANSPORATION----------
CREATE TABLE [dbo].[TRANSPORTATION](
    [TRANSPORTATION_ID] [int] NOT NULL IDENTITY(1,1),
	[DESCRIPTION] [nvarchar](100) NOT NULL
)
ALTER TABLE [dbo].[TRANSPORTATION]
WITH CHECK ADD CONSTRAINT PK_TRANSPORTATION PRIMARY KEY (TRANSPORTATION_ID);


-----------------------------------------------------------------------------------------MANY TO MANY FOR SERVICES



CREATE TABLE ACC_HAS_TRANSPORTATION(
	[ACC_ID] INT,
	[TRANSPORTATION_ID] INT
)

-------------------------------------------------------------------------------------------------------------------------------------------





CREATE TABLE ACC_HAS_PAYMENT_TYPE(
	[ACC_ID] INT,
	[PAYMENT_TYPE_ID] INT
)


---------------------------------------------------------------------------------------------------------------------------------------------


CREATE TABLE ACC_SUPPORTS_LANGUAGE(
	[ACC_ID] INT,
	[LANGUAGE_ID] INT
)
ALTER TABLE [dbo].[ACC_SUPPORTS_LANGUAGE] WITH CHECK ADD CONSTRAINT [FK_ACC_SUPPORTS_LANGUAGE_1] FOREIGN KEY([ACC_ID])
REFERENCES [dbo].[ACCOMMODATION](ACC_ID)
ON DELETE NO ACTION
ALTER TABLE [dbo].[ACC_SUPPORTS_LANGUAGE] WITH CHECK ADD CONSTRAINT [FK_ACC_SUPPORTS_LANGUAGE_2] FOREIGN KEY([LANGUAGE_ID])
REFERENCES [dbo].[LANGUAGE](LANGUAGE_ID)
ON DELETE NO ACTION


-----------------------------------------------------------------------------------------------------------------------------------------------



CREATE TABLE ACC_HAS_CUISINE(
	[ACC_ID] INT,
	[CUISINE_TYPE_ID] INT
)


-------------------------------------------------------------------------------------------------------------------------------------------------


CREATE TABLE ACC_HAS_MEAL_PLAN(
	[ACC_ID] INT,
	[MEAL_PLAN_TYPE_ID] INT
)


----------------------------------------------------------------------------------------------------------------------------------------------------

CREATE TABLE ACC_HAS_BREAKFAST_ITEM(
	[ACC_ID] INT,
	[BREAKFAST_ID] INT
)


--------------------------------------------------------------------------------------------------------------------------------------------------------

CREATE TABLE BREAKFAST_HAS_TYPE(
	[BREAKFAST_ID] INT,
	[BREAKFAST_TYPE_ID] INT
)


-----------------------------------------------------------------------------------------------------------------------------------------------------------

CREATE TABLE ROOMTYPE_HAS_BED_TYPE(
	[ROOM_CODE] INT,
	[BED_TYPE_ID] INT
)

-----------------------------------------------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------
-----------------------------FOREIGN KEYS-----------------------
----------------------------------------------------------------

--MANAGES--
ALTER TABLE [dbo].[MANAGES] WITH CHECK ADD CONSTRAINT [FK_MANAGES_1] FOREIGN KEY([USER_ID])
REFERENCES [dbo].[USER](USER_ID)
ON DELETE NO ACTION
ALTER TABLE [dbo].[MANAGES] WITH CHECK ADD CONSTRAINT [FK_MANAGES_2] FOREIGN KEY([ACCOM_ID])
REFERENCES [dbo].[ACCOMMODATION](ACC_ID)
ON DELETE NO ACTION
GO

--ACC PROVIDES FACILITY--
ALTER TABLE [dbo].[ACC_PROVIDES_FACILITY] WITH CHECK ADD CONSTRAINT [FK_ACC_PROVIDES_FACILITY_1] FOREIGN KEY([ACCOM_ID])
REFERENCES [dbo].[ACCOMMODATION](ACC_ID)
ON DELETE NO ACTION
ALTER TABLE [dbo].[ACC_PROVIDES_FACILITY] WITH CHECK ADD CONSTRAINT [FK_ACC_PROVIDES_FACILITY_2] FOREIGN KEY([CODE])
REFERENCES [dbo].[FACILITIES](CODE)
ON DELETE NO ACTION
GO

--ACCOMMODATION HAS POLICY--
ALTER TABLE [dbo].[ACC_HAS_POLICY] WITH CHECK ADD CONSTRAINT [FK_ACC_HAS_POLICY_1] FOREIGN KEY([ACCOM_ID])
REFERENCES [dbo].[ACCOMMODATION](ACC_ID)
ON DELETE NO ACTION
ALTER TABLE [dbo].[ACC_HAS_POLICY] WITH CHECK ADD CONSTRAINT [FK_ACC_HAS_POLICY_2] FOREIGN KEY([CODE])
REFERENCES [dbo].[ACCOMMODATION_POLICY]([CODE])
GO

--ROOM HAS AMENITY--
ALTER TABLE [dbo].[ROOM_HAS_AMENITY] WITH CHECK ADD CONSTRAINT [FK_ROOM_HAS_AMENITY_1] FOREIGN KEY([ROOM_CODE])
REFERENCES [dbo].[ROOM_TYPE]([CODE])
ALTER TABLE [dbo].[ROOM_HAS_AMENITY] WITH CHECK ADD CONSTRAINT [FK_ROOM_HAS_AMENITY_2] FOREIGN KEY([CODE])
REFERENCES [dbo].[AMENITY]([CODE])
GO

--PRODUCT HAS TERM--
ALTER TABLE [dbo].[PRODUCT_HAS_TERM] WITH CHECK ADD CONSTRAINT [FK_PRODUCT_HAS_TERM_1] FOREIGN KEY ([PID])
REFERENCES [dbo].[PRODUCT]([PID])
ALTER TABLE [dbo].[PRODUCT_HAS_TERM] WITH CHECK ADD CONSTRAINT [FK_PRODUCT_HAS_TERM_2] FOREIGN KEY ([TERM_ID])
REFERENCES [dbo].[TERMS]([CODE])
GO

--REVIEW--
/*
ALTER TABLE [dbo].[REVIEW] WITH CHECK ADD CONSTRAINT [FK_REVIEW] FOREIGN KEY ([BOOKING_ID])
REFERENCES [dbo].[BOOKING]([BOOKING_ID])
GO
*/
--BOOKING
ALTER TABLE [dbo].[BOOKING] WITH CHECK ADD CONSTRAINT [FK_BOOKING_1] FOREIGN KEY([USER_ID])
REFERENCES [dbo].[USER] ([USER_ID])
ON DELETE NO ACTION
GO

--REMOVED DUE TO SCHEMA CHANGE--
--^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
--ALTER TABLE [dbo].[BOOKING] WITH CHECK ADD CONSTRAINT [FK_BOOKING_2] FOREIGN KEY([PID])
--REFERENCES [dbo].[PRODUCT] ([PID])
--ON DELETE NO ACTION
--GO

--ACCOMMODATION
ALTER TABLE [dbo].[ACCOMMODATION] WITH CHECK ADD CONSTRAINT [FK_ACCOMMODATION_1] FOREIGN KEY([CONTACT_ID])
REFERENCES [dbo].[CONTACT_PERSON] ([CONTACT_ID])
ON DELETE NO ACTION
GO

ALTER TABLE [dbo].[ACCOMMODATION] WITH CHECK ADD CONSTRAINT [FK_ACCOMMODATION_2] FOREIGN KEY([TYPE_CODE])
REFERENCES [dbo].[ACCOMMODATION_TYPE] ([CODE])
ON DELETE NO ACTION
GO

ALTER TABLE [dbo].[ACCOMMODATION] WITH CHECK ADD CONSTRAINT [FK_ACCOMMODATION_3] FOREIGN KEY([CITY_ID])
REFERENCES [dbo].[CITY]([CITY_ID])
ON DELETE NO ACTION
GO


--PRODUCT
ALTER TABLE [dbo].[PRODUCT] WITH CHECK ADD CONSTRAINT [FK_PRODUCT_1] FOREIGN KEY([ROOM_CODE])
REFERENCES [dbo].[ROOM_TYPE] ([CODE])
ON DELETE NO ACTION
GO

/* schema change
ALTER TABLE [dbo].[PRODUCT] WITH CHECK ADD CONSTRAINT [FK_PRODUCT_2] FOREIGN KEY([ACCOM_ID])
REFERENCES [dbo].[ACCOMMODATION] ([ACC_ID])
ON DELETE NO ACTION
GO
*/

ALTER TABLE [dbo].[PRODUCT] WITH CHECK ADD CONSTRAINT [FK_PRODUCT_3] FOREIGN KEY([CATEGORY_CODE])
REFERENCES [dbo].[PRICE_CATEGORY] ([CODE])
ON DELETE NO ACTION
GO

ALTER TABLE [dbo].[PRODUCT] WITH CHECK ADD CONSTRAINT [FK_PRODUCT_4] FOREIGN KEY([CANCEL_POLICY])
REFERENCES [dbo].[CANCELLATION_POLICY] ([ID])
ON DELETE NO ACTION
GO

ALTER TABLE [dbo].[PRODUCT] WITH CHECK ADD CONSTRAINT [FK_PRODUCT_5] FOREIGN KEY([OVERRIDE_PC])
REFERENCES [dbo].[CANCELLATION_POLICY] ([ID])
ON DELETE NO ACTION
GO

ALTER TABLE [dbo].[PRODUCT] WITH CHECK ADD CONSTRAINT [FK_PRODUCT_6] FOREIGN KEY([PREPAYMENT_POLICY])
REFERENCES [dbo].[PREPAYMENT_POLICY] ([ID])
ON DELETE NO ACTION
GO


--PRODUCT RESERVE
ALTER TABLE [dbo].[PRODUCT_RESERVE] WITH CHECK ADD CONSTRAINT [FK_PRODUCT_RESERVE_1] FOREIGN KEY([PID])
REFERENCES [dbo].[PRODUCT] ([PID])
ON DELETE NO ACTION
GO

--BOOKING HAS PRODUCT
ALTER TABLE [dbo].[BOOKING_HAS_PRODUCT] WITH CHECK ADD CONSTRAINT [FK_BOOKING_HAS_PRODUCT_1] FOREIGN KEY([BOOKING_ID])
REFERENCES [dbo].[BOOKING]([BOOKING_ID])
ON DELETE NO ACTION 
GO
ALTER TABLE [dbo].[BOOKING_HAS_PRODUCT] WITH CHECK ADD CONSTRAINT [FK_BOOKING_HAS_PRODUCT_2] FOREIGN KEY([PID])
REFERENCES [dbo].[PRODUCT]([PID])
ON DELETE NO ACTION 
GO

--CITY--
ALTER TABLE [dbo].[CITY] WITH CHECK ADD CONSTRAINT [FK_CITY_1] FOREIGN KEY([COUNTRY_NAME])
REFERENCES [dbo].[COUNTRY]([COUNTRY_NAME])
ON DELETE NO ACTION 
GO

--ROOM TYPE--
ALTER TABLE [dbo].[ROOM_TYPE] WITH CHECK ADD CONSTRAINT [FK_ROOM_TYPE_1] FOREIGN KEY ([ACC_ID])
REFERENCES [dbo].[ACCOMMODATION]([ACC_ID])
ON DELETE NO ACTION
GO

--AUDIT MANAGER--
ALTER TABLE [dbo].[AUDIT_MANAGER] WITH CHECK ADD CONSTRAINT [FK_AUDIT_MANAGER] FOREIGN KEY ([MANAGER_ID])
REFERENCES [dbo].[USER]([USER_ID])
ON DELETE NO ACTION
GO

ALTER TABLE [dbo].[ACC_HAS_TRANSPORTATION] WITH CHECK ADD CONSTRAINT [FK_ACC_HAS_TRANSPORTATION_1] FOREIGN KEY([ACC_ID])
REFERENCES [dbo].[ACCOMMODATION](ACC_ID)
ON DELETE NO ACTION
ALTER TABLE [dbo].[ACC_HAS_TRANSPORTATION] WITH CHECK ADD CONSTRAINT [FK_ACC_HAS_TRANSPORTATION_2] FOREIGN KEY([TRANSPORTATION_ID])
REFERENCES [dbo].[TRANSPORTATION](TRANSPORTATION_ID)
ON DELETE NO ACTION

ALTER TABLE [dbo].[ACC_HAS_PAYMENT_TYPE] WITH CHECK ADD CONSTRAINT [FK_ACC_HAS_PAYMENT_TYPE_1] FOREIGN KEY([ACC_ID])
REFERENCES [dbo].[ACCOMMODATION](ACC_ID)
ON DELETE NO ACTION
ALTER TABLE [dbo].[ACC_HAS_PAYMENT_TYPE] WITH CHECK ADD CONSTRAINT [FK_ACC_HAS_PAYMENT_TYPE_2] FOREIGN KEY([PAYMENT_TYPE_ID])
REFERENCES [dbo].[PAYMENT_TYPE](PAYMENT_TYPE_ID)
ON DELETE NO ACTION

ALTER TABLE [dbo].[ACC_HAS_CUISINE] WITH CHECK ADD CONSTRAINT [FK_ACC_HAS_CUISINE_1] FOREIGN KEY([ACC_ID])
REFERENCES [dbo].[ACCOMMODATION](ACC_ID)
ON DELETE NO ACTION
ALTER TABLE [dbo].[ACC_HAS_CUISINE] WITH CHECK ADD CONSTRAINT [FK_ACC_HAS_CUISINE_2] FOREIGN KEY([CUISINE_TYPE_ID])
REFERENCES [dbo].[CUISINE_TYPE](CUISINE_TYPE_ID)
ON DELETE NO ACTION

ALTER TABLE [dbo].[ACC_HAS_MEAL_PLAN] WITH CHECK ADD CONSTRAINT [FK_ACC_HAS_MEAL_PLAN_1] FOREIGN KEY([ACC_ID])
REFERENCES [dbo].[ACCOMMODATION](ACC_ID)
ON DELETE NO ACTION
ALTER TABLE [dbo].[ACC_HAS_MEAL_PLAN] WITH CHECK ADD CONSTRAINT [FK_ACC_HAS_MEAL_PLAN_2] FOREIGN KEY([MEAL_PLAN_TYPE_ID])
REFERENCES [dbo].[MEAL_PLAN_TYPE](MEAL_PLAN_TYPE_ID)
ON DELETE NO ACTION

ALTER TABLE [dbo].[ACC_HAS_BREAKFAST_ITEM] WITH CHECK ADD CONSTRAINT [FK_ACC_HAS_BREAKFAST_ITEM_1] FOREIGN KEY([ACC_ID])
REFERENCES [dbo].[ACCOMMODATION](ACC_ID)
ON DELETE NO ACTION
ALTER TABLE [dbo].[ACC_HAS_BREAKFAST_ITEM] WITH CHECK ADD CONSTRAINT [FK_ACC_HAS_BREAKFAST_ITEM_2] FOREIGN KEY([BREAKFAST_ID])
REFERENCES [dbo].[BREAKFAST_ITEM](BREAKFAST_ID)
ON DELETE NO ACTION

ALTER TABLE [dbo].[BREAKFAST_HAS_TYPE] WITH CHECK ADD CONSTRAINT [FK_BREAKFAST_HAS_TYPE_1] FOREIGN KEY([BREAKFAST_ID])
REFERENCES [dbo].[BREAKFAST_ITEM](BREAKFAST_ID)
ON DELETE NO ACTION
ALTER TABLE [dbo].[BREAKFAST_HAS_TYPE] WITH CHECK ADD CONSTRAINT [FK_BREAKFAST_HAS_TYPE_2] FOREIGN KEY([BREAKFAST_TYPE_ID])
REFERENCES [dbo].[BREAKFAST_TYPE](BREAKFAST_TYPE_ID)
ON DELETE NO ACTION

ALTER TABLE [dbo].[ROOMTYPE_HAS_BED_TYPE] WITH CHECK ADD CONSTRAINT [FK_ROOMTYPE_HAS_BED_TYPE_1] FOREIGN KEY([ROOM_CODE])
REFERENCES [dbo].[ROOM_TYPE](CODE)
ON DELETE NO ACTION
ALTER TABLE [dbo].[ROOMTYPE_HAS_BED_TYPE] WITH CHECK ADD CONSTRAINT [FK_ROOMTYPE_HAS_BED_TYPE_2] FOREIGN KEY([BED_TYPE_ID])
REFERENCES [dbo].[BED_TYPE](BED_TYPE_ID)
ON DELETE NO ACTION



------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------TRIGGERS---------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------

IF OBJECT_ID (N'[dbo].UPDATE_AVAILABILITY_ON_BOOKING', 'TR')
IS NOT NULL
DROP TRIGGER UPDATE_AVAILABILITY_ON_BOOKING;
GO

CREATE TRIGGER UPDATE_AVAILABILITY_ON_BOOKING
ON dbo.[BOOKING_HAS_PRODUCT]
AFTER INSERT
AS
BEGIN
    SET NOCOUNT ON;

    DECLARE @BOOKING_ID INT,@PID INT, @SD DATE, @ED DATE,@AMOUNT INT;

    -- Get the ProductId, StartDate, and EndDate from the inserted rows
	SELECT @PID = PID, @BOOKING_ID = BOOKING_ID
	FROM inserted;
	SELECT @SD = B.START_DATE, @ED = B.END_DATE, @AMOUNT = B.AMOUNT
	FROM BOOKING B
	WHERE B.BOOKING_ID = @BOOKING_ID

	SET @ED = DATEADD(day, -1, @ED);

	
    -- Update availability in the product_reserves table
    UPDATE dbo.[PRODUCT_RESERVE]
    SET dbo.[PRODUCT_RESERVE].[AVAILABILITY] = PR.[AVAILABILITY] - @AMOUNT 
    FROM dbo.[PRODUCT_RESERVE] AS PR
    WHERE PR.PID = @PID
      AND PR.DATE BETWEEN @SD AND @ED;
END;
GO

IF OBJECT_ID (N'[dbo].UPDATE_AVAILABILITY_ON_CANCEL', 'TR')
IS NOT NULL
DROP TRIGGER UPDATE_AVAILABILITY_ON_CANCEL;
GO

CREATE TRIGGER UPDATE_AVAILABILITY_ON_CANCEL
ON dbo.[BOOKING]
AFTER UPDATE
AS
BEGIN
    SET NOCOUNT ON;

    DECLARE @BOOKING_ID INT,@AMOUNT INT;
	DECLARE @PIDS TABLE(PID INT)
	DECLARE @WAS_CANCELLED INT
	DECLARE @IS_CANCELLED INT

	SELECT @WAS_CANCELLED = CANCELLED
	FROM deleted

	SELECT @IS_CANCELLED = CANCELLED
	FROM inserted
	
	IF(@IS_CANCELLED = 1 AND @WAS_CANCELLED = 0)
	BEGIN
		---Get the ProductId, StartDate, and EndDate from the inserted rows---
		SELECT @BOOKING_ID = BOOKING_ID
		FROM inserted;

		INSERT INTO @PIDS SELECT BHP.PID FROM BOOKING_HAS_PRODUCT BHP WHERE BHP.BOOKING_ID=@BOOKING_ID

		SELECT @AMOUNT = B.AMOUNT
		FROM BOOKING B
		WHERE B.BOOKING_ID = @BOOKING_ID
		
		-- Update availability in the product_reserves table
		UPDATE dbo.[PRODUCT_RESERVE]
		SET dbo.[PRODUCT_RESERVE].[AVAILABILITY] = PR.[AVAILABILITY] + @AMOUNT 
		FROM dbo.[PRODUCT_RESERVE] AS PR
		WHERE PR.PID IN (SELECT * FROM @PIDS)
	END
END;
GO

